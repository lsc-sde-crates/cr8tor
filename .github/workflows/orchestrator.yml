name: Orchestrate Data Load

on:
  workflow_call:
    inputs:
      environment:
         required: true
         default: 'DEV'
         type: string
      cr8tor_branch:
         required: false
         type: string

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set GH_TOKEN for GitHub CLI authentication
    APPROVALS_API_TOKEN: ${{ secrets[format('APPROVALS_API_TOKEN_{0}', inputs.environment)] }}
    APPROVALS_HOST: ${{ secrets[format('APPROVALS_HOST_{0}', inputs.environment)] }}

permissions:
    contents: write
    issues: write

jobs:
    Validate:
        if: github.ref == 'refs/heads/main' # Ensures the workflow only runs on the main branch
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        outputs:
          branch_name: ${{ steps.create_branch.outputs.branch_name }}
          pr_url: ${{ steps.create_pr.outputs.pr_url }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}

            - name: Create a new temp branch
              id: create_branch
              run: |
                git config --global user.name "LSCSDE Governance Actions"
                git config --global user.email "lscsde-actions@github.com"

                $branchName = "temp-$((Get-Date).ToString('yyyyMMddHHmmss'))"
                git checkout -B $branchName
                git push origin $branchName
                echo "branch_name=$branchName" >> $env:GITHUB_OUTPUT

            - name: Setup uv
              uses: astral-sh/setup-uv@v5
              with:
                version: "0.5.16"

            - name: Clone cr8tor repository (specific branch)
              if: ${{ inputs.cr8tor_branch != '' }}
              run: |
                #git clone --branch ${{ inputs.cr8tor_branch }} https://github.com/lsc-sde-crates/cr8tor.git

            - name: Clone cr8tor repository (default branch)
              if: ${{ inputs.cr8tor_branch == '' }}
              run: |
                #git clone https://github.com/lsc-sde-crates/cr8tor.git

            - name: Sync cr8tor repository
              run: |
                #uv sync --directory cr8tor

            - name: Cr8tor CLI Create & Validate
              run: |
                #cr8tor\.venv\Scripts\activate
                #cr8tor create -a GithubAction -i ./resources
                #cr8tor validate -a GithubAction -i ./resources

            - name: Push changes to repo
              run: |
                echo "Pushing changes to repository" > ./bagit/README.md
                echo "Pushing changes to repository" > ./resources/README.md

            - name: Push changes to repo
              run: |
                git config --global user.name "LSCSDE Governance Actions"
                git config --global user.email "lscsde-actions@github.com"

                git add ./bagit ./resources ./config.toml
                git commit -m "Update after create and validate action"
                git push origin ${{ steps.create_branch.outputs.branch_name }}

            - name: Add GitHub CLI to PATH
              run: |
                if (-not ( $env:Path -split ";" -contains "C:\Program Files\GitHub CLI\" )) {
                  echo "PATH=$env:Path;C:\Program Files\GitHub CLI\" | Out-File -Append -FilePath $env:GITHUB_ENV
                }

            - name: Create PR from temp branch to main
              id: create_pr
              run: |
                $pr_url = (gh pr create --base main --head ${{ steps.create_branch.outputs.branch_name }} `
                  --title "Update main repository for the validated ro-crate details" `
                  --body "Update main repository for the validated ro-crate details" )
                echo "pr_url=$pr_url" >> $env:GITHUB_OUTPUT

            - name: Create artifact for validated RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-validated
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Send sign-off message
              run: |
                $message = "Please verify and sign off DAR project at https://github.com/${{ github.repository }}/tree/${{ steps.create_branch.outputs.branch_name }}."
                $message = $message + " Pull Request: ${{ steps.create_pr.outputs.pr_url }}"
                echo "::notice::$message"

    SignOff:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [Validate]
        environment: signoff
        steps:
            - name: Checkout temp repository
              uses: actions/checkout@v4
              with:
                ref: "${{ needs.Validate.outputs.branch_name }}"
                clean: false

            - name: Cr8tor CLI Sign-Off
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor sign-off -a GithubAction -i ./resources -agreement ${{ needs.Validate.outputs.pr_url }} -signing-entity "cr8-ALL-projects-approver"

            - name: Push changes to repository
              run: |
                git add ./bagit ./resources ./config.toml
                git commit -m "Update after sign off action"
                git push origin ${{ needs.Validate.outputs.branch_name }}

            - name: Delete Pull Request
              run: |
                gh pr merge --delete-branch --merge --admin

            - name: Create artifact for signed off RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-signed-off
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

    Workflow-Execution:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [SignOff]
        outputs:
          branch_name: ${{ steps.create_branch.outputs.branch_name }}
          pr_url: ${{ steps.create_pr.outputs.pr_url }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}
                clean: false

            - name: Create a new temp branch
              id: create_branch
              run: |
                git config --global user.name "LSCSDE Governance Actions"
                git config --global user.email "lscsde-actions@github.com"

                $branchName = "temp-$((Get-Date).ToString('yyyyMMddHHmmss'))"
                git checkout -B $branchName
                git push origin $branchName
                echo "branch_name=$branchName" >> $env:GITHUB_OUTPUT

            - name: Cr8tor CLI Staging Data
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor stage-transfer -a GithubAction -i ./resources

            - name: Push changes to repo
              run: |
                git add ./bagit ./resources ./config.toml
                git commit -m "Update after staging action"
                git push

            - name: Add GitHub CLI to PATH
              run: |
                if (-not ( $env:Path -split ";" -contains "C:\Program Files\GitHub CLI\" )) {
                  echo "PATH=$env:Path;C:\Program Files\GitHub CLI\" | Out-File -Append -FilePath $env:GITHUB_ENV
                }

            - name: Create PR from temp branch to main
              id: create_pr
              run: |
                $pr_url = (gh pr create --base main --head ${{ steps.create_branch.outputs.branch_name }} `
                  --title "Update main repository for the staged ro-crate details" `
                  --body "Update main repository for the staged ro-crate details" )
                echo "pr_url=$pr_url" >> $env:GITHUB_OUTPUT

            - name: Create artifact for staged RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-staged
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Send sign-off message
              run: |
                $message = "Please verify and approve Disclosure stage of DAR project at https://github.com/${{ github.repository }}/tree/${{ steps.create_branch.outputs.branch_name }}."
                $message = $message + " Pull Request: ${{ steps.create_pr.outputs.pr_url }}"
                echo "::notice::$message"

    Disclosure:
        runs-on: ubuntu-latest
        needs: [Workflow-Execution]
        environment: disclosure
        steps:
          - name: Checkout temp repository
            uses: actions/checkout@v4
            with:
              ref: "${{ needs.Workflow-Execution.outputs.branch_name }}"
              clean: false

          - name: Cr8tor CLI Sign-Off
            run: |
              cr8tor\.venv\Scripts\activate
              cr8tor sign-off -a GithubAction -i ./resources -agreement ${{ needs.Workflow-Execution.outputs.pr_url }} -signing-entity "cr8-ALL-projects-approver"

          - name: Push changes to repository
            run: |
              git add ./bagit ./resources ./config.toml
              git commit -m "Update after sign off action"
              git push origin ${{ needs.Workflow-Execution.outputs.branch_name }}

          - name: Delete Pull Request
            run: |
              gh pr merge --delete-branch --merge --admin

          - name: Create artifact for signed off RO-Crate
            uses: actions/upload-artifact@v4
            with:
              name: ro-crate-signed-off
              path: |
                  ./bagit
                  ./resources
                  ./config.toml


    Publish:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [Disclosure]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}
                clean: false

            - name: Cr8tor CLI Publish Data
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor publish -a GithubAction -i ./resources

            - name: Create artifact for published RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-published
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Push changes to repository
              run: |
                git add ./bagit ./resources ./config.toml
                git commit -m "Update bagit and resources"
                git push
