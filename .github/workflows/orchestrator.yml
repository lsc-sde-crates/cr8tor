name: Orchestrate Data Load

on:
  workflow_call:
    inputs:
      environment:
         required: true
         default: 'DEV'
         type: string
      cr8tor_branch:
         required: false
         type: string

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    APPROVALS_API_TOKEN: ${{ secrets[format('APPROVALS_API_TOKEN_{0}', inputs.environment)] }}
    APPROVALS_HOST: ${{ secrets[format('APPROVALS_HOST_{0}', inputs.environment)] }}

permissions:
    contents: write
    issues: write

jobs:
    CreateTempBranch:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        outputs:
          branch_name: ${{ steps.create_branch.outputs.branch_name }}  # Store step output at job level
        steps:
            - name: Checkout main repository
              uses: actions/checkout@v4
              with:
                ref: "main"

            - name: Create a new temp branch
              id: create_branch
              run: |
                git config --global user.name "LSCSDE Governance Actions"
                git config --global user.email "lscsde-actions@github.com"

                $branchName = "temp-$((Get-Date).ToString('yyyyMMddHHmmss'))"
                git checkout -B $branchName
                git push origin $branchName
                echo "branch_name=$branchName" >> $env:GITHUB_OUTPUT


    TestNewBranch:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [CreateTempBranch]
        steps:
            - name: Checkout temp repository
              uses: actions/checkout@v4
              with:
                ref: "${{ needs.CreateTempBranch.outputs.branch_name }}"
                clean: false

            - name: Push changes to repository
              run: |
                echo "Creating a new branch" > ./resources/README.md

                git add ./bagit ./resources ./config.toml
                git commit -m "Update bagit and resources"
                git push origin ${{ needs.CreateTempBranch.outputs.branch_name }}

                gh pr create --base main --head ${{ needs.CreateTempBranch.outputs.branch_name }} `
                  --title "Update project's repository for the published ro-crate details" `
                  --body "Update project's repository for the published ro-crate details"

                gh pr merge --delete-branch --merge --admin

    Validate:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        if: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}

            - name: Show github context
              run: |
                echo "GITHUB_REPOSITORY: ${{ github.repository }}"
                echo "GITHUB_REF: ${{ github.ref }}"
                echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
                echo "GITHUB_BASE_REF: ${{ github.base_ref }}"
                echo "GITHUB_HEAD_REF: ${{ github.head_ref }}"
                echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
                echo "GITHUB_EVENT_PATH: ${{ github.event_path }}"
                echo "GITHUB_WORKSPACE: ${{ github.workspace }}"
                echo "GITHUB_SHA: ${{ github.sha }}"
                echo "GITHUB_ACTOR: ${{ github.actor }}"
                echo "GITHUB_JOB: ${{ github.job }}"
                echo "GITHUB_RUN_ID: ${{ github.run_id }}"
                echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
                echo "GITHUB_ACTION: ${{ github.action }}"

            - name: Setup uv
              uses: astral-sh/setup-uv@v5
              with:
                version: "0.5.16"

            - name: Clone cr8tor repository (specific branch)
              if: ${{ inputs.cr8tor_branch != '' }}
              run: |
                git clone --branch ${{ inputs.cr8tor_branch }} https://github.com/lsc-sde-crates/cr8tor.git

            - name: Clone cr8tor repository (default branch)
              if: ${{ inputs.cr8tor_branch == '' }}
              run: |
                git clone https://github.com/lsc-sde-crates/cr8tor.git

            - name: Sync cr8tor repository
              run: |
                uv sync --directory cr8tor

            - name: Cr8tor CLI Create & Validate
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor create -a GithubAction -i ./resources
                cr8tor validate -a GithubAction -i ./resources

            - name: Push changes to repo
              run: |
                git config --global user.name "LSCSDE Governance Actions"
                git config --global user.email "lscsde-actions@github.com"

                git add ./bagit ./resources ./config.toml
                git commit -m "Update bagit and resources"
                git push

            - name: Create artifact for validated RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-validated
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Send sign-off message
              run: |
                $message = "Please verify RO-Crate and sign off Data Access Request at https://github.com/${{ github.repository }}/tree/${{ github.head_ref }} ."
                if ("${{ github.event_name }}" -eq "pull_request") {
                    $message = $message + "Pull Request: https://github.com/${{ github.repository }}/pull/${{ github.ref_name }}"
                } else {
                    $message = $message + "Please create pull request against 'main' branch for improved user experience"
                }
                echo "::notice::$message"

    SignOff:
        runs-on: ubuntu-latest
        needs: [Validate]
        environment: signoff
        steps:
            # TODO: Add Cr8tor CLI that will update the RO-Crate with the sign-off information
            - name: Simulate sign-off cr8tor steps
              run: echo "cr8tor will run sign-off steps and update ro-crate. No need to run microservices"

    Workflow-Execution:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [SignOff]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}
                clean: false

            - name: Cr8tor CLI Staging Data
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor stage-transfer -a GithubAction -i ./resources

            - name: Push changes to repo
              run: |
                git add ./bagit ./resources ./config.toml
                git commit -m "Update bagit and resources"
                git push

            - name: Create artifact for staged RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-staged
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Send sign-off message
              run: |
                $message = "Please verify RO-Crate and sign off Data Access Request at https://github.com/${{ github.repository }}/tree/${{ github.head_ref }} ."
                if ("${{ github.event_name }}" -eq "pull_request") {
                    $message = $message + "Pull Request: https://github.com/${{ github.repository }}/pull/${{ github.ref_name }}"
                } else {
                    $message = $message + "Please create pull request against 'main' branch for improved user experience"
                }
                echo "::notice::$message"

    Disclosure:
        runs-on: ubuntu-latest
        needs: [Workflow-Execution]
        environment: disclosure
        steps:
            # TODO: Add Cr8tor CLI that will update the RO-Crate with the sign-off information
            - name: Simulate sign-off cr8tor steps
              run: echo "cr8tor will run sign-off steps and update ro-crate. No need to run microservices"


    Publish:
        runs-on: ${{ inputs.environment }}-cr8tor-vm
        needs: [Disclosure]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}
                clean: false

            - name: Cr8tor CLI Publish Data
              run: |
                cr8tor\.venv\Scripts\activate
                cr8tor publish -a GithubAction -i ./resources

            - name: Create artifact for published RO-Crate
              uses: actions/upload-artifact@v4
              with:
                name: ro-crate-published
                path: |
                    ./bagit
                    ./resources
                    ./config.toml

            - name: Push changes to repository
              run: |
                git add ./bagit ./resources ./config.toml
                git commit -m "Update bagit and resources"
                git push

            # TODO: Once github cli is available in the runner, we can use it to create a merge & close PR
